
wp:posts                                Return a list of all posts
wp:posts/filter/{name}                  Apply a pre-defined filter to the list of posts.
wp:posts/filter/{name}+{p}={v}          Pass parameters to a pre-defined filter.
wp:posts+_format={name}                 Return the list of posts in a specified format.
wp:posts/{id}                           Return data for a single post.
wp:posts{id}+_format={name}             Return post data in a specified format.

Formats: List and detail data by default is formatted for configuring either a table
data source or web view respectively; but the default format can be overriden in both
the content container configuration, and/or from within the URI.


Pre-packaged feed content: Possible approach
* Add an additional field to the posts table, indicating whether content is pre-packaged or not.
* Post content returned by the server should use template placeholders for the following:
  1. As a prefix for base content (i.e. path location prefix);
  2. For media attachment references.
* The client template should replace the placeholders as appropriate, assuming that the content
  is displayed in a page whose location is set to the content path:
  - If no new base content is downloaded, then with full path to the packaged app content; else
    to path relative to content path;
  - For attachments, if the pre-packaged flag is set then with full path to the packaged app
    content;
  - Else when attachments downloaded, with path to file relative to content path.

A slightly simpler version of the approach might simply copy base content to the content path
at installation.

Need to review path references to files packaged with the app, to make sure that the approach will
work. Then need to see how the client template can properly resolve attachment references during
template rendering.

(NOTE: Base content under the content path might be deleted in some circumstances - will it need
a separate location anyway?)

Pre-packaged content + purged content restoration:
x. Initial base content location is within packaged content. Also: How to decide when to unpack packaged content?
x. Downloaded base content unpacked to application support.
x. Post webview reference URL set to base content location. (i.e. within webview config returned by wp:posts/{id} URIs).
x. Image attachment URLs to be replaced by WP plugin when generating client template. Also: other post hrefs.
x. Client template to replace image attachment references with full path to image location.
x. Client template to check attachment status and initiate downloaded of missing attachments.
x. Content protocol to support download of individual attachments. (Use standard 'get' command, download to content path + attachment filename).
x. Content protocol to support deployment of packaged content.
x. New field on posts table to indicate whether attachments are located in packaged content.

1. Finalize filters & formats setup.
2. Set base content etc. within web view config returned by post/{id} form URIs.
3. Implement list formatter.
4. Question of how to handle sizing/shaping of images for list data - should be part of wp: scheme?

OUTSTANDING:
* Whether and how to manage auto-resizing of attached images for webview & lists.
* Content container as an event target, i.e. so that the UI can initiate a content refresh.


NOTE: Changes made yesterday to the plugin - adding the 'packaged' request parameter, to control the
value of the 'location' field in the response - may have been the wrong approach. A command line packager
tool is probably needed anyway, and as this will (1) download the initial feed, and then (2) download
each attachment referenced from the feed, as part of the package preparation; then it can also rewrite
the location field in the feed JSON. (But the current approach is still useable also at this point).

